@import "../../../style/variables";
@import "../../../style/mixins";

.results-detail {
  // background: $color-overlay-background;
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0px;
  left: 0px;
  z-index: 2;

  .close {
    position: absolute;
    right: 0px;
    left: 0px;
    height: 100%;
    background: $color-overlay-background;
  }

  .panel {
    background: $color-header-background;
    width: 100%;
    max-width: 640px;
    height: 100%;
    right: 0px;
    position: absolute;

    header {
      height: 64px;
      box-sizing: border-box;

      background: $color-result-default;
      color: $color-header-background;

      padding: 20px 56px;

      // svg.arrow {
      //   position: absolute;
      //   top: 0px;
      //   left: 0px;
      //   cursor: pointer;
      //   opacity: 0.8;
      //
      //   &:hover {
      //     opacity: 1;
      //   }
      // }

      span {
        font-size: 2rem;
        cursor: pointer;
        text-align: right;
        color: #fff;
        padding: 4px 16px;
        position: absolute;
        top: 4px;
        left: 8px;
      }

      div {
        font-weight: normal;
        font-size: 20px;
        line-height: 24px;

        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;

        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
      }
    }

    .loading {
      opacity: 0;
      position: absolute;
      top: 25%;
      left: 50%;
      transform: translate(-50%, -50%);
      display: flex;
      align-items: center;
      pointer-events: none;
      transition: opacity .4s;

      &.loading-data {
        opacity: 1;
      }

      .quart {
        fill: $color-result-background;
      }
      .three-quarts {
        fill: $color-result-default;
      }

      svg {
        margin-top: -1px;
        margin-right: $distance-inner-default;
        animation-duration: 1s;
        animation-name: rotate;
        animation-iteration-count: infinite;
        animation-timing-function: linear;
      }
    }

    @keyframes rotate {
      from {
        transform: rotate(0deg);
      }
      to {
        transform: rotate(360deg);
      }
    }

    .details {
      padding: 32px;
      box-sizing: border-box;
      transition: opacity .4s;

      &.loading-data {
        opacity: 0;
      }

      .meta-data, .content {
        $cover-width: 0px;

        box-sizing: border-box;
        @include flex-default();

        .wrapper, &.content {
          padding-right: 16px;
          max-width: calc(100% - #{$cover-width});
          box-sizing: border-box;

          .datum {
            $prop-width: 88px;

            font-size: 14px;
            vertical-align: top;
            @include flex-default();
            justify-content: flex-start;
            margin-bottom: 24px;

            .prop {
              color: $color-text-grey;
              width: $prop-width;
              min-width: $prop-width;
            }

            .value {
              max-width: calc(100% - #{$prop-width});
              color: $color-body-font;

              &.tags {
                margin: -4px 0 -8px 0;

                .tag {
                  height: 32px;
                  display: inline-block;
                  box-sizing: border-box;
                  padding: 8px;
                  border-radius: 5px;
                  background: $color-person-background;
                  color: $color-person-default;
                  font-weight: bold;
                  line-height: 16px;
                  margin: 0 8px 8px 0;

                  max-width: 100%;
                  white-space: nowrap;
                  overflow: hidden;
                  text-overflow: ellipsis;
                  vertical-align: top;
                  cursor: pointer;

                  &:hover {
                    background-color: $color-person-background--hover;
                  }

                  &.topic {
                    background: $color-topic-background;
                    color: $color-topic-default;

                    &:hover {
                      background-color: $color-topic-background--hover;
                    }
                  }

                  &.year {
                    background: $color-year-background;
                    color: $color-year-default;

                    &:hover {
                      background-color: $color-year-background--hover;
                    }
                  }
                }
              }
            }
          }

          .buttons {
            margin-top: 32px;

            .button {
              background: $color-result-default;
              border-radius: $border-radius-default;
              box-sizing: border-box;
              height: 40px;
              padding: 8px 12px;
              font-size: 14px;
              display: inline-block;

              color: $color-header-background;
              text-decoration: none;
            }
          }
        }

        .cover {
          min-width: $cover-width;
          height: 200px;
          background: #000;
        }

      }

      .content {
        width: 100%;
        height: 200px;
      }
    }
  }
}
