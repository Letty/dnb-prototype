@import "../../../style/variables";
@import "../../../style/mixins";

.collapsed-tags {
  position: absolute;
  height: 32px;
  overflow: hidden;
  white-space: nowrap;
  width: 100%;
  display: flex;
  align-items: center;

  .loading {
    opacity: 0;
    top: 5px;
    display: flex;
    align-items: center;
    pointer-events: none;
    position: absolute;

    svg {
      margin-top: -1px;
      margin-right: $distance-inner-default;
      animation-duration: 1s;
      animation-name: rotate;
      animation-iteration-count: infinite;
      animation-timing-function: linear;
    }
  }

  .loading, .hide-while-loading {
    transition: opacity .4s;
  }


  &.loading-data {
    .loading {
      opacity: 1;
    }
    .hide-while-loading {
      opacity: 0;
    }
    .selected {
      margin-right: $distance-inner-default;
    }
  }

  .wrapper {
    height: 26px;
  }

  .total-results {
    display: inline-block;
    margin-right: 20px;
    transform: translateY(-8px);

    .mono {
      font-family: 'RobotoMono', monospace;
    }
  }

  .item {
    display: inline-block;
    font-size: 0.85em;
    white-space: nowrap;
    margin-right: 4px;
    border-radius: 5px;
    font-weight: 500;
    height: 26px;
    box-sizing: border-box;
    cursor: pointer;
    opacity: 0;
    transition: opacity .4s;
    pointer-events: none;

    span {
      max-width: 160px;
      padding: 3px 8px;
      overflow: hidden;
      white-space: nowrap;
      text-overflow: ellipsis;
      display: inline-block;;
    }

    &.visible {
      opacity: 1;
      pointer-events: auto;
    }

    &.selected {
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;

      span {
        max-width: 130px;
        padding: 3px 1.5px 3px 8px;

        &.close-button {
          padding: 3px 8px 3px 1.5px;
          font-weight: bold;
        }
      }
    }
  }
  .overlay {
    position: absolute;
    right: 0px;
    height: 100%;
    width: 48px;
    pointer-events: none;
    top: 0px;
    background: linear-gradient(90deg, rgba(255, 255, 255, 0), rgba(255, 255, 255, 1));
  }
}

:host(.topic) {
  .item {
    background: $color-topic-background;

    &:hover {
      background: $color-topic-background--hover;
    }

    &.selected {
      color: $color-topic-background;
      background: $color-topic-default;

      &:hover {
        color: #fff;
        background: darken($color-topic-default, 2%);
      }
    }
  }
  .loading {
    .quart {
      fill: $color-topic-background;
    }
    .three-quarts {
      fill: $color-topic-default;
    }
  }
}

:host(.person) {
  .item {
    background: $color-person-background;

    &:hover {
      background: $color-person-background--hover;
    }

    &.selected {
      color: $color-person-background;
      background: $color-person-default;

      &:hover {
        color: #fff;
        background: darken($color-person-default, 2%);
      }
    }
  }
  .loading {
    .quart {
      fill: $color-person-background;
    }
    .three-quarts {
      fill: $color-person-default;
    }
  }
}

:host(.result) {
  .item {
    background: $color-result-background;

    &:hover {
      background: $color-result-background--hover;
    }

    &.selected {
      color: $color-result-background;
      background: $color-result-default;

      &:hover {
        color: #fff;
        background: darken($color-result-default, 2%);
      }
    }
  }
  .loading {
    .quart {
      fill: $color-result-background;
    }
    .three-quarts {
      fill: $color-result-default;
    }
  }
}

:host(.year) {
  pointer-events: none;
  .item {
    background: $color-year-background;

    &:hover {
      background: $color-year-background--hover;
    }

    &.selected {
      color: $color-year-background;
      background: $color-year-default;

      &:hover {
        color: #fff;
        background: darken($color-year-default, 2%);
      }
    }
  }
  .loading {
    .quart {
      fill: $color-year-background;
    }
    .three-quarts {
      fill: $color-year-default;
    }
  }
  .overlay {
    display: none;
  }
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
